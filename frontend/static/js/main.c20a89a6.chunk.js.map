{"version":3,"sources":["source/images/svg-images/mesto_logo.svg","contexts/AuthContext.js","components/Header.jsx","contexts/CurrentUserContext.js","components/Card.jsx","components/Main.jsx","components/Footer.jsx","components/PopupWithForm.jsx","components/ImagePopup.jsx","utils/apiFunctions.js","utils/Api.js","utils/authApi.js","components/Input.jsx","components/EditProfilePopup.jsx","components/EditAvatarPopup.jsx","components/AddPlacePopup.jsx","components/ProtectedRoute.jsx","components/SignButton.jsx","components/Register.jsx","components/Login.jsx","components/InfoToolTip.jsx","source/images/svg-images/success-icon.svg","source/images/svg-images/error-icon.svg","components/App.js","index.js"],"names":["AuthContext","createContext","Header","emailNav","location","authContext","useContext","handleClickSignOut","localStorage","removeItem","handleQuit","className","src","logo","alt","onClick","to","CurrentUserContext","Card","onCardClick","onCardLike","onCardDelete","card","currentUser","isOwn","owner","_id","isLiked","likes","some","like","elementLikeClassName","type","link","name","length","Main","onEditProfile","onAddPlace","onEditAvatar","cards","onLocation","path","useRouteMatch","useEffect","avatar","about","map","Footer","PopupWithForm","title","isOpen","onClose","onSubmit","children","isLoading","value","ImagePopup","renderResponse","responsePromise","callback","finallyHandler","then","data","catch","error","console","log","finally","api","options","this","_baseURL","baseURL","_headers","headers","_checkResponse","bind","_token","response","ok","json","Promise","reject","status","url","token","fetch","method","authorization","fio","aboutYourself","body","JSON","stringify","addLike","deleteLike","checkResponse","Input","maxLength","minLength","placeholder","onChangeHandler","id","styleModifier","required","onChange","evt","EditProfilePopup","onUserUpdate","useState","formState","setFormState","handleChange","target","preventDefault","EditAvatarPopup","onUpdateAvatar","inputRef","useRef","current","defaultValue","ref","AddPlacePopup","onAddCard","mestoName","mestoURL","handleChangeForm","ProtectedRoute","Component","component","props","isLoggedIn","SignButton","Register","onSuccessfullReg","onErrorReg","email","password","authApi","Login","onErrorLoggedIn","onEmail","history","useHistory","setItem","setToken","handleLogin","push","InfoToolTip","icon","App","cohort","setCurrentUser","pathname","setLocation","handleLocation","editProfileState","setEditProfileState","editAvatarState","setEditAvatarState","addPlaceState","setAddPlaceState","successfulRegState","setSuccessfulRegState","errorRegState","setErrorRegState","selectedCard","setSelectedCard","setIsLoading","setEmailNav","setCards","getPreloadsCards","getUserInfo","getItem","jwt","handleLoggedIn","handleEmailNav","setAuthUser","authUser","handleErrorReg","closeAllPopups","Provider","exact","changeLikeCardStatus","newCard","prevState","stateItem","deleteCard","filter","updateUserInfo","updateAvatar","postCard","newCardData","successIcon","errorIcon","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c20a89a6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/mesto_logo.3b886bd4.svg\";","import {createContext} from \"react\";\n\nexport const AuthContext = createContext();","import React, {useContext, useState} from \"react\";\nimport logo from '../source/images/svg-images/mesto_logo.svg';\nimport {Link} from \"react-router-dom\";\nimport {AuthContext} from \"../contexts/AuthContext\";\n\n function Header({emailNav, location}) {\n\n\n    const authContext = useContext(AuthContext);\n\n    const handleClickSignOut = () =>{\n        localStorage.removeItem('jwt');\n        authContext.handleQuit();\n    }\n\n     const getMarkUp = () => {\n         if (location === '/'){\n             return (<p className=\"header__menu\">{`${emailNav}`} {<Link onClick={handleClickSignOut} className=\"header__menu-link\" to=\"/sign-in\">Выйти</Link>}</p>)\n         }else{\n             return  location === '/sign-up' ? (<Link className=\"header__menu-link\" to=\"../sign-in\">Войти</Link>) : (<Link className=\"header__menu-link\" to=\"../sign-up\">Регистрация</Link>)\n         }\n      }\n    return(\n        <header className=\"header page__header\">\n            <img className=\"header__logo\" src={logo} alt=\"Лого\"/>\n            {getMarkUp()}\n        </header>\n    );\n}\n\nexport default Header;","import {createContext} from \"react\";\n\nexport const CurrentUserContext = createContext();","import React, {useContext} from \"react\";\n\nimport {CurrentUserContext} from \"../contexts/CurrentUserContext\";\n\nfunction Card({onCardClick, onCardLike, onCardDelete, card}){\n\n    const currentUser = useContext(CurrentUserContext);\n    const handleCardClick = () => {\n        onCardClick({link:card.link, name: card.name});\n    }\n    const handleLikeClick = () => {\n        onCardLike(card);\n    }\n    const handleDeleteCard = () => {\n        onCardDelete(card);\n    }\n    const isOwn = card.owner._id === currentUser._id;\n    const isLiked = card.likes.some( like => like._id === currentUser._id);\n    const elementLikeClassName = `element__like ${isLiked ? 'element__like_active' : ''}`;\n    return(\n        <article className=\"element\">\n            {isOwn && <button className=\"element__trash\" type=\"button\" onClick={handleDeleteCard}></button>}\n            <img className=\"element__photo\" src={card.link} alt={`Фото ${card.name}`} onClick={handleCardClick}/>\n            <div className=\"element__container\">\n                <h2 className=\"element__title\">{card.name}</h2>\n                <div className=\"element__like-container\">\n                    <button className={elementLikeClassName} type=\"button\" onClick={handleLikeClick}></button>\n                    <p className=\"element__like-counter\">{card.likes.length}</p>\n                </div>\n            </div>\n        </article>\n\n    );\n}\n\nexport default Card;","import React, {useContext, useEffect} from \"react\";\nimport Card from \"./Card\";\nimport {CurrentUserContext} from \"../contexts/CurrentUserContext\";\nimport {useRouteMatch} from \"react-router-dom\";\n\n\n\nfunction Main({onEditProfile, onAddPlace, onEditAvatar, onCardClick, cards, onCardLike, onCardDelete, onLocation}){\n\n    const currentUser = useContext(CurrentUserContext);\n    const {path} = useRouteMatch();\n    useEffect(() => {\n        onLocation(path);\n    }, []);\n\n    return(\n\n            <main className=\"content\">\n                <section className=\"profile page__profile\">\n                    <div className=\"profile__avatar-container\">\n                        <img className=\"profile__avatar\" src={currentUser.avatar}\n                             alt=\"Аватар\"/>\n                        <button className=\"profile__avatar-edit-overlay\" onClick={onEditAvatar}></button>\n                    </div>\n\n                    <div className=\"profile-info profile__profile-info\">\n                        <div className=\"profile-info__container\">\n                            <h1 className=\"profile-info__name\">{currentUser.name}</h1>\n                            <button className=\"profile-info__button-edit\" type=\"button\" onClick={onEditProfile}></button>\n                        </div>\n                        <p className=\"profile-info__role\">{currentUser.about}</p>\n                    </div>\n\n                    <button className=\"profile__button-add\" type=\"button\" onClick={onAddPlace}></button>\n                </section>\n                <section className=\"elements page__elements\">\n                    {cards.map( (card) => {\n\n                        return  (\n\n                                <Card key={card._id}\n                                      onCardClick={onCardClick}\n                                      onCardLike={onCardLike}\n                                      onCardDelete={onCardDelete}\n                                      card={card}\n                                />\n                    )\n                    } )}\n                </section>\n\n            </main>\n\n    );\n}\n\nexport default Main;","import React from \"react\";\n\nfunction Footer(){\n    return(\n        <footer className=\"footer page__footer\">\n            <p className=\"footer__copyright\">&copy; 2021 Mesto Russia</p>\n        </footer>\n    );\n}\n\nexport default Footer;","import React from \"react\";\n\nfunction PopupWithForm({name, title, isOpen, onClose, onSubmit, children, isLoading}){\n    return(\n        <div className={`popup popup_type_${name} ${isOpen && 'popup_opened'}`}>\n            <div className=\"popup__container\">\n                <button className=\"popup__button-close\" onClick={onClose} type=\"button\"></button>\n                <form className=\"popup__form\" name={name} onSubmit={onSubmit}>\n                    <h2 className=\"popup__title\">{title}</h2>\n                    {children}\n                    <input className=\"popup__button-save\" type=\"submit\" value={isLoading ? 'Сохранить...' : 'Сохранить'}/>\n                </form>\n            </div>\n        </div>\n    );\n}\n\nexport default PopupWithForm;","import React from \"react\";\n\nfunction ImagePopup({card, onClose}){\n    return(\n        <div className={`popup popup_opacity popup_type_picture ${card.name && \"popup_opened\"}`}>\n            <div className=\"popup__container-photo\">\n                <button className=\"popup__button-close\" type=\"button\" onClick={onClose}></button>\n                <img className=\"popup__photo\" src={card.link} alt={card.name}/>\n                <p className=\"popup__photo-name\">{card.name}</p>\n            </div>\n        </div>\n    );\n}\n\nexport default ImagePopup;","\n\nexport function renderLoading(isLoading){\n    const openedPopup = document.querySelector('.popup_opened');\n    if(isLoading && openedPopup){\n        openedPopup.querySelector('input[type=submit]').value = `${openedPopup.querySelector('input[type=submit]').value}...`;\n    }else if(!isLoading) {\n        Array.from(document.forms).forEach(form => {\n            form.querySelector('input[type=submit]').value = form.querySelector('input[type=submit]').value.split('...')[0];\n        });\n    }\n}\n\nexport function renderResponse(responsePromise, callback, finallyHandler){\n\n\n\n    responsePromise\n        .then((data) => {\n            callback(data);\n        })\n        .catch((error) => {\n            console.log(`Ошибка ${error}`);\n        })\n        .finally(() => {\n            if(finallyHandler !== '#'){\n                finallyHandler();\n            }\n        })\n}\n\n","export class Api {\n    constructor(options) {\n        this._baseURL = options.baseURL;\n        this._headers = options.headers;\n        this._checkResponse = this._checkResponse.bind(this);\n        this._token = null;\n    }\n\n    _checkResponse(response){\n        if(response.ok){\n            return response.json();\n        }\n        return Promise.reject(`${response.status} and ${response.url}`);\n    }\n    setToken(token){\n      this._token = token;\n    }\n\n    getUserInfo() {\n        return fetch(`${this._baseURL}users/me`,\n            {\n                method: 'GET',\n                headers: {\n                    authorization: `Bearer ${this._token}`,\n                    'Content-type': 'application/json'\n                }\n            }).then(this._checkResponse);\n    }\n\n    getPreloadsCards(){\n        return fetch(`${this._baseURL}cards/`,\n            {\n                method: 'GET',\n                headers: {\n                    authorization: `Bearer ${this._token}`,\n                    'Content-type': 'application/json'\n                }\n            }).then(this._checkResponse)\n    }\n\n\n\n    updateUserInfo({fio, aboutYourself}){\n        return fetch(`${this._baseURL}users/me`, {\n            method: 'PATCH',\n            headers: {\n                authorization: `Bearer ${this._token}`,\n                'Content-type': 'application/json'\n            },\n            body:JSON.stringify({\n                name:`${fio}`,\n                about: `${aboutYourself}`\n            })\n        }).then(this._checkResponse);\n    }\n\n    postCard({name, link}){\n        return  fetch(`${this._baseURL}cards`, {\n            method: 'POST',\n            headers:{\n                authorization: `Bearer ${this._token}`,\n                'Content-type': 'application/json'\n            },\n            body:JSON.stringify({\n                name:`${name}`,\n                link:`${link}`\n            })\n        }).then(this._checkResponse);\n    }\n    deleteCard(_id){\n        return fetch(`${this._baseURL}cards/${_id}`, {\n            method:'DELETE',\n            headers:{\n                authorization: `Bearer ${this._token}`,\n                'Content-type': 'application/json'\n            }\n        }).then(this._checkResponse);\n    }\n\n    addLike(_id){\n        return fetch(`${this._baseURL}cards/likes/${_id}`, {\n            method:'PUT',\n            headers:{\n                authorization: `Bearer ${this._token}`,\n                'Content-type': 'application/json'\n            }\n        }).then(this._checkResponse);\n    }\n    deleteLike(_id){\n        return fetch(`${this._baseURL}cards/likes/${_id}`, {\n            method:'DELETE',\n            headers:{\n                authorization: `Bearer ${this._token}`,\n                'Content-type': 'application/json'\n            }\n        }).then(this._checkResponse);\n    }\n    updateAvatar({avatar}){\n        return fetch(`${this._baseURL}users/me/avatar`, {\n            method: 'PATCH',\n            headers: {\n                authorization: `Bearer ${this._token}`,\n                'Content-type': 'application/json'\n            },\n            body:JSON.stringify({\n                    avatar: `${avatar}`\n                }\n            )\n        }).then(this._checkResponse);\n    }\n\n    changeLikeCardStatus(_id, isLiked) {\n        if (isLiked) {\n            return this.addLike(_id);\n        }\n        return this.deleteLike(_id);\n    }\n}\n\nexport const api = new Api({ baseURL : 'http://api.mesto.photocard.nomoredomains.work/', headers:{\n        authorization: `Bearer`,\n        'Content-Type': 'application/json'\n    }});","const baseURL = 'http://api.mesto.photocard.nomoredomains.work';\n\nconst checkResponse = (response) => {\n    if(response.ok){\n        return response.json();\n    }\n    return  Promise.reject(response.status);\n}\n\nexport const authentication = ({password, email}) => {\n    return fetch(`${baseURL}/users/signup`, {\n        method: \"POST\",\n        headers:{\n            'Content-type': 'application/json'\n        },\n        body: JSON.stringify({password, email})\n    })\n        .then(checkResponse)\n        .then( data => {\n            return data;\n        })\n}\nexport const login = ({password, email}) => {\n    return fetch(`${baseURL}/users/signin`, {\n        method: \"POST\",\n        headers:{\n            'Content-type': 'application/json'\n        },\n        body: JSON.stringify({password, email})\n    })\n        .then(checkResponse)\n        .then( data => {\n            if(data.token){\n                localStorage.setItem('jwt', data.token);\n                return data;\n            }else {\n                return;\n            }\n            return data;\n        })\n}\n\nexport const getUserCredentials = (jwt) => {\n    return fetch(`${baseURL}/users/me`, {\n        method: 'GET',\n        headers:{\n        \"Content-Type\": \"application/json\",\n        \"Authorization\" : `Bearer ${jwt}`\n        }\n    }).then(checkResponse).then(({data}) => {\n\n        return data\n    });\n}\n/*\ndodiknevova dodik@gmail.com*/\n","import React from \"react\";\n\nexport const Input = ({maxLength, minLength, placeholder, onChangeHandler, value, name, id, type, styleModifier}) => {\n\n    const handleChange = (evt) => {\n        onChangeHandler(evt)\n    }\n    return(\n        <>\n            <input className={`popup__input ${styleModifier ? styleModifier : ''}`}\n                   value={value}\n                   placeholder={placeholder}\n                   required\n                   name={name}\n                   id={id}\n                   maxLength={maxLength}\n                   minLength={minLength}\n                   onChange={handleChange}\n                   type={type}/>\n            <span className=\"popup__input-error-info profile-name-error\"></span>\n        </>\n    )\n}","import React, {useContext, useEffect, useState} from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport {CurrentUserContext} from \"../contexts/CurrentUserContext\";\nimport {Input} from \"./Input\";\n\n\n\nexport const EditProfilePopup = ({isOpen, onClose, onUserUpdate, isLoading}) => {\n    const currentUser = useContext(CurrentUserContext);\n\n    const [formState, setFormState] = useState({fio:'', aboutYourself: ''});\n    useEffect(() => {\n        setFormState({fio: currentUser.name, aboutYourself: currentUser.about})\n    }, [currentUser, isOpen]);\n    const handleChange = (evt) => {\n        const {name, value} = evt.target;\n        setFormState({...formState, [name]: value});\n    }\n\n\n    const handleSubmit = (evt) => {\n        evt.preventDefault();\n        onUserUpdate({name: formState['fio'], about: formState['aboutYourself']})\n    }\n    return(\n        <PopupWithForm name={\"profile\"} title={\"Редактировать профиль\"}\n                       isOpen={isOpen}\n                       onClose={onClose}\n                       onSubmit={handleSubmit}\n                       isLoading={isLoading}\n        >\n            <Input maxLength=\"40\"\n                   minLength=\"2\"\n                   onChangeHandler={handleChange}\n                   value={formState['fio']}\n                   placeholder=\"Имя\"\n                   name=\"fio\"\n                   id=\"profile-name\"/>\n            <Input maxLength=\"200\"\n                   minLength=\"2\"\n                   onChangeHandler={handleChange}\n                   value={formState['aboutYourself']}\n                   placeholder=\"О себе\"\n                   name=\"aboutYourself\"\n                   id=\"profile-about\" />\n        </PopupWithForm>\n    )\n}\n","import React, {useEffect, useRef} from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\n\nexport const EditAvatarPopup = ({isOpen, onClose, onUpdateAvatar, isLoading}) => {\n\n    const inputRef = useRef();\n    useEffect(() => {\n        inputRef.current.value = '';\n    }, [isOpen])\n\n    const handleSubmit = (evt) => {\n        evt.preventDefault();\n        onUpdateAvatar({avatar: inputRef.current.value});\n    }\n\n\n    return(\n        <PopupWithForm name={\"edit-avatar\"} title={\"Обновить аватар\"}\n                       isOpen={isOpen}\n                       onClose={onClose}\n                       onSubmit={handleSubmit}\n                       isLoading={isLoading}\n        >\n            <input className=\"popup__input\"\n                   defaultValue=\"\"\n                   placeholder=\"Ссылка на фото\"\n                   required\n                   name=\"avatar\"\n                   id=\"profile-avatar\"\n                   type=\"url\" ref={inputRef}/>\n\n            <span className=\"popup__input-error-info profile-avatar-error\"></span>\n        </PopupWithForm>\n    );\n}","import React, {useEffect, useState} from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport {Input} from \"./Input\";\n\nexport const AddPlacePopup = ({isOpen, onClose, onAddCard, isLoading}) => {\n\n    const [formState, setFormState] = useState({mestoName:'', mestoURL: ''});\n\n    useEffect(() => {\n        setFormState({mestoName:'', mestoURL: ''});\n\n    }, [isOpen]);\n\n\n    const handleChangeForm = (evt) => {\n        const {name, value} = evt.target;\n        setFormState({...formState, [name]:value})\n    }\n\n    const handleSubmit = (evt) => {\n        evt.preventDefault();\n        onAddCard({name: formState.mestoName, link: formState.mestoURL});\n\n    }\n    return(\n        <PopupWithForm name={\"card-add\"} title={\"Новое место\"}\n                       isOpen={isOpen}\n                       onClose={onClose}\n                       onSubmit={handleSubmit}\n                       isLoading={isLoading}\n        >\n            <Input value={formState.mestoName}\n                   placeholder={\"Название\"}\n                   id={\"mesto-name\"}\n                   name={\"mestoName\"}\n                   onChangeHandler={handleChangeForm} />\n            <Input value={formState.mestoURL}\n                   placeholder={\"Ссылка на картинку\"}\n                   id={\"mesto-url\"}\n                   name={\"mestoURL\"}\n                   onChangeHandler={handleChangeForm}\n                   type={\"url\"}/>\n        </PopupWithForm>\n    );\n}\n","import React, {useContext} from \"react\";\nimport {Route, Redirect} from 'react-router-dom'\nimport {AuthContext} from \"../contexts/AuthContext\";\nexport const ProtectedRoute = ({component: Component, ...props}) => {\n    const authContext = useContext(AuthContext);\n\n\n\n    return(\n        <Route >\n            {() =>  authContext.isLoggedIn ? <Component {...props} /> : <Redirect to=\"./sign-in\" />}</Route>\n    );\n\n}","import React from \"react\";\n\nexport const SignButton = ({ value }) => {\n    return(\n        <input className=\"sign-button\" type=\"submit\" value={value} />\n    );\n}","import React, {useEffect, useState} from \"react\";\nimport {Input} from \"./Input\";\nimport {SignButton} from \"./SignButton\";\nimport {Link, useRouteMatch} from 'react-router-dom'\nimport * as authApi from '../utils/authApi';\nexport const Register = ({onSuccessfullReg, onErrorReg, onLocation}) => {\n    const [formState, setFormState] = useState({email: '', password: ''});\n    const {path} = useRouteMatch();\n    useEffect(() => {\n        onLocation(path)\n    }, []);\n    const handleChange = (evt) => {\n        const {name, value} = evt.target;\n        setFormState({...formState, [name]: value});\n    }\n\n    const handleSubmit = (evt) => {\n        evt.preventDefault();\n        authApi.authentication(formState).then(data => {\n\n            onSuccessfullReg();\n        }).catch(() => {\n            onErrorReg();\n        })\n    }\n\n    return(\n        <main className=\"content\">\n            <section className=\"register page__register\">\n                <h2 className=\"register__title\">Регистрация</h2>\n                <form className=\"register__form\" onSubmit={handleSubmit}>\n                    <Input value={formState['email']}\n                           name=\"email\"\n                           id=\"register-email\"\n                           maxLength=\"100\"\n                           minLength=\"6\"\n                           onChangeHandler={handleChange}\n                           type=\"text\"\n                           styleModifier=\"register__input\"\n                           placeholder=\"Email\"\n                    />\n                    <Input value={formState['password']}\n                           id=\"register-password\"\n                           name=\"password\"\n                           maxLength=\"24\"\n                           minLength=\"6\"\n                           onChangeHandler={handleChange}\n                           type=\"password\"\n                           styleModifier=\"register__input\"\n                           placeholder=\"Пароль\"\n                    />\n                    <SignButton value=\"Зарегестрироваться\" />\n                </form>\n                    <p className=\"register__sign-in-caption\">Уже зарегистрированы? {<Link to=\"../sign-in\" className=\"register__sign-in-link\">Войти</Link>}</p>\n            </section>\n        </main>\n    );\n}","import React, {useContext, useState, useEffect} from \"react\";\nimport {Input} from \"./Input\";\nimport {SignButton} from \"./SignButton\";\nimport * as authApi from '../utils/authApi';\nimport { api } from \"../utils/Api\";\nimport {useHistory, useRouteMatch} from \"react-router-dom\";\nimport {AuthContext} from \"../contexts/AuthContext\";\nexport const Login = ({ onErrorLoggedIn, onEmail, onLocation }) => {\n\n    const authContext = useContext(AuthContext);\n    const history = useHistory();\n    const [formState, setFormState] = useState({email: '', password: ''});\n    const {path} = useRouteMatch();\n    useEffect(() => {\n        onLocation(path)\n    }, []);\n\n\n    const handleChange = (evt) => {\n        const {value, name} = evt.target;\n        setFormState({...formState, [name]: value});\n    }\n    const handleSubmit = (evt) => {\n        evt.preventDefault();\n        authApi.login(formState).then(data => {\n            if(data.token){\n                api.setToken(data.token);\n                authContext.handleLogin();\n                history.push('/');\n                onEmail(formState.email);\n\n            }\n        }).catch(() => {\n            onErrorLoggedIn();\n        })\n    }\n    return(\n        <main className=\"content\">\n            <section className=\"login page__login\">\n                <h2 className=\"login__title\">Вход</h2>\n                <form className=\"login__form\" onSubmit={handleSubmit}>\n                    <Input value={formState['email']}\n                           id=\"login-email\"\n                           name=\"email\"\n                           maxLength=\"24\"\n                           minLength=\"6\"\n                           onChangeHandler={handleChange}\n                           type=\"text\"\n                           styleModifier=\"login__input\"\n                           placeholder=\"Email\"\n                    />\n                    <Input value={formState['password']}\n                           id=\"login-password\"\n                           name=\"password\"\n                           maxLength=\"24\"\n                           minLength=\"6\"\n                           onChangeHandler={handleChange}\n                           type=\"password\"\n                           styleModifier=\"login__input\"\n                           placeholder=\"Пароль\"\n                    />\n                    <SignButton value=\"Войти\" />\n                </form>\n            </section>\n        </main>\n    );\n}","import React from \"react\";\n\n\nexport const InfoToolTip = ({name, isOpen, onClose, icon, title, alt}) => {\n\n    return(\n        <div className={`popup popup_type_${name} ${isOpen && 'popup_opened'}`}>\n            <div className=\"popup__container\">\n                <button className=\"popup__button-close\" onClick={onClose} type=\"button\"></button>\n                <img className=\"popup__reg-icon\" src={icon} alt={alt}/>\n                <h2 className=\"popup__title popup__title_color_black popup__title_type_notification\">{title}</h2>\n            </div>\n        </div>\n    );\n}","export default __webpack_public_path__ + \"static/media/success-icon.1b6082f8.svg\";","export default __webpack_public_path__ + \"static/media/error-icon.df8eddf6.svg\";","import Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport ImagePopup from \"./ImagePopup\";\nimport {useEffect, useState} from \"react\";\nimport {CurrentUserContext} from \"../contexts/CurrentUserContext\";\nimport {renderResponse} from \"../utils/apiFunctions\";\nimport {api} from \"../utils/Api\";\nimport * as authApi from '../utils/authApi';\nimport {EditProfilePopup} from \"./EditProfilePopup\";\nimport {EditAvatarPopup} from \"./EditAvatarPopup\";\nimport {AddPlacePopup} from \"./AddPlacePopup\";\nimport {Route, Switch, useHistory} from 'react-router-dom'\nimport {ProtectedRoute} from \"./ProtectedRoute\";\nimport {Register} from \"./Register\";\nimport {Login} from \"./Login\";\nimport {InfoToolTip} from \"./InfoToolTip\";\nimport successIcon from '../source/images/svg-images/success-icon.svg';\nimport errorIcon from '../source/images/svg-images/error-icon.svg';\nimport {AuthContext} from \"../contexts/AuthContext\";\n\nfunction App() {\n\n    const [currentUser, setCurrentUser] = useState({about: '', avatar: '', cohort:'', name:'', _id: '', email: ''});\n\n    // хук для навигации с помощью brouser router\n    const history = useHistory();\n\n    const [location, setLocation] = useState(history.location.pathname);\n    const handleLocation = (value) => {\n        setLocation(value);\n    }\n    const [editProfileState, setEditProfileState] = useState(false);\n    const [editAvatarState, setEditAvatarState] = useState(false);\n    const [addPlaceState, setAddPlaceState] = useState(false);\n    const [successfulRegState, setSuccessfulRegState] = useState(false);\n    const [errorRegState, setErrorRegState] = useState(false);\n    const [selectedCard, setSelectedCard] = useState({});\n    const [isLoading, setIsLoading] = useState(false);\n    const [emailNav, setEmailNav] = useState('');\n     function   finallyHandler(){\n        setIsLoading(false);\n    }\n    // стейт карточек\n    const [cards, setCards] = useState([]);\n    useEffect(() => {\n        renderResponse(api.getPreloadsCards(), (data)=>{\n            setCards(data);\n        }, \"#\")\n        renderResponse(api.getUserInfo(), (data) => {\n            setCurrentUser({...currentUser, about: data.about, avatar: data.avatar, cohort: data.cohort, name: data.name, _id: data._id});\n        }, \"#\")\n        if(localStorage.getItem('jwt')){\n            const jwt = localStorage.getItem('jwt');\n            authApi.getUserCredentials(jwt).then( ({email, _id}) => {\n                api.setToken(jwt);\n                handleLoggedIn();\n                handleEmailNav(email);\n\n                history.push('/');\n            });\n\n        }\n    }, []);\n\n    // функции обратного вызова для управления поведением карточки\n    const handleCardLike = (card) => {\n        const isLiked = card.likes.some(like => like._id === currentUser._id);\n\n        renderResponse(api.changeLikeCardStatus(card._id, !isLiked), newCard => {\n            setCards((prevState) => {\n                return prevState.map( stateItem => {\n                    return stateItem._id === card._id ? newCard : stateItem;\n                });\n            });\n        }, finallyHandler);\n    }\n\n    const handleCardDelete = (card) => {\n\n        renderResponse(api.deleteCard(card._id), () => {\n            setCards(prevState => {\n                return prevState.filter( stateItem => stateItem._id !== card._id)\n            });\n        }, finallyHandler);\n\n    }\n\n    const handleAddMestoCard = ({name, link}) => {\n        setIsLoading(true);\n        renderResponse(api.postCard({name: name, link: link}), newCardData => {\n            setCards([newCardData, ...cards]);\n            closeAllPopups();\n        }, finallyHandler);\n    }\n\n    // функции обратного вызова для управления данными пользователя\n\n    const handleUpdateUser = ({name, about}) => {\n        setIsLoading(true);\n        renderResponse(api.updateUserInfo({fio: name, aboutYourself: about}),data => {\n            setCurrentUser({...currentUser, name: data.name, about: data.about})\n            closeAllPopups();\n        }, finallyHandler);\n\n    }\n\n    const handleUpdateAvatar = ({avatar}) => {\n        setIsLoading(true);\n        renderResponse(api.updateAvatar({avatar}), data => {\n            setCurrentUser({...currentUser, avatar: data.avatar});\n            closeAllPopups();\n        }, finallyHandler);\n    }\n\n    //обработчики для стейта авторизации\n    const handleLoggedIn = () => {\n        setAuthUser({...authUser, isLoggedIn: true});\n    }\n    const handleLoggOut = () => {\n        setAuthUser({...authUser, isLoggedIn: false});\n    }\n    const handleEmailNav = value => {\n        setEmailNav(value)\n    }\n\n    const [authUser, setAuthUser] = useState({isLoggedIn: false, handleLogin: handleLoggedIn, handleQuit: handleLoggOut, handleEmailNav: handleEmailNav});\n\n    // функции обратного вызова для открытия/закрытия попапов\n    const handleEditAvatarClick = () => {\n        setEditAvatarState(true);\n    }\n    const handleEditProfileClick = () => {\n        setEditProfileState(true);\n    }\n    const handleAddPlaceClick = () => {\n        setAddPlaceState(true);\n    }\n    const handleSuccessfullReg = () => {\n        setSuccessfulRegState(true);\n    }\n    const handleErrorReg = () => {\n        setErrorRegState(true);\n    }\n    const closeAllPopups = () => {\n        setEditProfileState(false);\n        setAddPlaceState(false);\n        setEditAvatarState(false);\n        setSuccessfulRegState(false);\n        setErrorRegState(false);\n        setSelectedCard({});\n    }\n\n    const handleCardClick = (card) => {\n        setSelectedCard(card);\n    }\n\n\n  return (\n      <AuthContext.Provider value={authUser}>\n          <CurrentUserContext.Provider value={currentUser}>\n\n              <Header emailNav={emailNav} location={location}/>\n              <Switch>\n\n                  <ProtectedRoute component={Main}\n                                      path=\"/\"\n                                      emailNav={emailNav}\n                                      onLocation={handleLocation}\n                                      exact={true}\n                                      onEditProfile={handleEditProfileClick}\n                                      onAddPlace={handleAddPlaceClick}\n                                      onEditAvatar={handleEditAvatarClick}\n                                      onCardClick={handleCardClick}\n                                      onCardLike={handleCardLike}\n                                      onCardDelete={handleCardDelete}\n                                      cards={cards} />\n                  <Route path=\"/sign-up\">\n\n                      <Register onSuccessfullReg={handleSuccessfullReg}\n                                onErrorReg={handleErrorReg}\n                                onLocation={handleLocation}/>\n                  </Route>\n                  <Route path=\"/sign-in\">\n\n                      <Login onErrorLoggedIn={handleErrorReg}\n                             onEmail={handleEmailNav}\n                             onLocation={handleLocation}/>\n                  </Route>\n              </Switch>\n            <Footer />\n              <EditProfilePopup isOpen={editProfileState}\n                                onClose={closeAllPopups}\n                                onUserUpdate={handleUpdateUser}\n                                isLoading={isLoading}/>\n\n              <EditAvatarPopup isOpen={editAvatarState}\n                               onClose={closeAllPopups}\n                               onUpdateAvatar={handleUpdateAvatar}\n                               isLoading={isLoading}/>\n\n              <AddPlacePopup isOpen={addPlaceState}\n                             onClose={closeAllPopups}\n                             onAddCard={handleAddMestoCard}\n                             isLoading={isLoading}/>\n\n              <PopupWithForm name={\"confirm\"} title={\"Вы уверены?\"}/>\n\n              <ImagePopup card={selectedCard} onClose={closeAllPopups}/>\n\n              <InfoToolTip name=\"success-register\"\n                                      isOpen={successfulRegState}\n                                      onClose={closeAllPopups}\n                                      icon={successIcon}\n                                      title=\"Вы успешно зарегестрировались!\"\n                                      alt=\"Иконка успешной регистрации\"/>\n\n              <InfoToolTip name=\"error-register\"\n                                      isOpen={errorRegState}\n                                      onClose={closeAllPopups}\n                                      icon={errorIcon} title=\"Что-то пошло не так! Попробуйте ещё раз.\"\n                                      alt=\"Иконка неуспешной регистрации\" />\n\n          </CurrentUserContext.Provider>\n      </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport {BrowserRouter} from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n      <BrowserRouter>\n          <App />\n      </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}